# Backend Dockerfile
# ==================
# 
# Multi-stage build for Node.js backend with Python dependencies

FROM node:18-alpine AS base

# Install Python and system dependencies
RUN apk add --no-cache \
    python3 \
    py3-pip \
    python3-dev \
    gcc \
    g++ \
    make \
    libc-dev \
    linux-headers \
    curl

# Create app directory
WORKDIR /app

# Copy package files
COPY server/package*.json ./

# Install Node.js dependencies
RUN npm ci --only=production && npm cache clean --force

# Install Python dependencies for REVENG
COPY requirements.txt ./
RUN pip3 install --no-cache-dir -r requirements.txt

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Create required directories
RUN mkdir -p uploads reports temp logs && \
    chown -R nodejs:nodejs /app

# Copy application code
COPY server/ ./
COPY --chown=nodejs:nodejs . .

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Start the application
CMD ["node", "server.js"]