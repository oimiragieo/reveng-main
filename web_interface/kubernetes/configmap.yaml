# ConfigMap for REVENG Web Interface
# ===================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: reveng-config
  namespace: reveng
data:
  NODE_ENV: "production"
  MONGO_DATABASE: "reveng"
  CLIENT_URL: "https://reveng.yourdomain.com"
  PYTHON_PATH: "python3"
  ANALYZER_PATH: "/app/tools/ai_enhanced_analyzer.py"
  WORKER_CONCURRENCY: "2"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: reveng
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream backend {
            server reveng-backend:5000;
        }
        
        upstream frontend {
            server reveng-frontend:80;
        }
        
        server {
            listen 80;
            server_name _;
            
            # Redirect HTTP to HTTPS
            return 301 https://$server_name$request_uri;
        }
        
        server {
            listen 443 ssl http2;
            server_name _;
            
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            
            # Security headers
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
            
            # API routes
            location /api/ {
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # WebSocket support
            location /socket.io/ {
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Frontend routes
            location / {
                proxy_pass http://frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }