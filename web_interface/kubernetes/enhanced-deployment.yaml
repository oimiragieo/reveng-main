# Enhanced Kubernetes Deployments with Scaling
# =============================================

# Analysis Worker Deployment with HPA
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analysis-worker
  namespace: reveng
  labels:
    app: analysis-worker
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analysis-worker
  template:
    metadata:
      labels:
        app: analysis-worker
        component: worker
    spec:
      containers:
      - name: worker
        image: reveng/analysis-worker:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: reveng-config
              key: NODE_ENV
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: reveng-secrets
              key: redis-password
        - name: AI_SERVICE_URL
          value: "http://ai-service:8000"
        - name: PYTHON_PATH
          valueFrom:
            configMapKeyRef:
              name: reveng-config
              key: PYTHON_PATH
        - name: ANALYZER_PATH
          valueFrom:
            configMapKeyRef:
              name: reveng-config
              key: ANALYZER_PATH
        - name: WORKER_CONCURRENCY
          valueFrom:
            configMapKeyRef:
              name: reveng-config
              key: WORKER_CONCURRENCY
        - name: MAX_JOB_TIME
          valueFrom:
            configMapKeyRef:
              name: reveng-config
              key: MAX_JOB_TIME
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
        - name: reports-storage
          mountPath: /app/reports
        - name: temp-storage
          mountPath: /app/temp
        - name: logs-storage
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: uploads-pvc
      - name: reports-storage
        persistentVolumeClaim:
          claimName: reports-pvc
      - name: temp-storage
        emptyDir:
          sizeLimit: 10Gi
      - name: logs-storage
        persistentVolumeClaim:
          claimName: logs-pvc

---
# AI Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
  namespace: reveng
  labels:
    app: ai-service
    component: ai
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
        component: ai
    spec:
      containers:
      - name: ai-service
        image: reveng/ai-service:latest
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: reveng-config
              key: DEBUG
        - name: MODEL_CACHE_DIR
          value: "/app/cache"
        volumeMounts:
        - name: model-cache
          mountPath: /app/cache
        - name: logs-storage
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: logs-pvc

---
# Horizontal Pod Autoscaler for Analysis Workers
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: analysis-worker-hpa
  namespace: reveng
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: analysis-worker
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# Horizontal Pod Autoscaler for AI Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-service-hpa
  namespace: reveng
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Percent
        value: 25
        periodSeconds: 120

---
# Pod Disruption Budget for Analysis Workers
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: analysis-worker-pdb
  namespace: reveng
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: analysis-worker

---
# Pod Disruption Budget for AI Service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ai-service-pdb
  namespace: reveng
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ai-service