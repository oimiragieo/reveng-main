name: Build Package

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [main]

jobs:
  build-python-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: python-package
          path: dist/

  build-docker-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t reveng/cli:${{ github.ref_name }} .
          docker build -t reveng/web:${{ github.ref_name }} -f web_interface/Dockerfile.frontend ./web_interface
          docker build -t reveng/backend:${{ github.ref_name }} -f web_interface/Dockerfile.backend ./web_interface
          docker build -t reveng/ai-service:${{ github.ref_name }} -f web_interface/Dockerfile.ai-service ./web_interface
          docker build -t reveng/worker:${{ github.ref_name }} -f web_interface/Dockerfile.worker ./web_interface

          docker push reveng/cli:${{ github.ref_name }}
          docker push reveng/web:${{ github.ref_name }}
          docker push reveng/backend:${{ github.ref_name }}
          docker push reveng/ai-service:${{ github.ref_name }}
          docker push reveng/worker:${{ github.ref_name }}

          if [ "${{ github.ref_name }}" = "main" ]; then
            docker tag reveng/cli:${{ github.ref_name }} reveng/cli:latest
            docker tag reveng/web:${{ github.ref_name }} reveng/web:latest
            docker tag reveng/backend:${{ github.ref_name }} reveng/backend:latest
            docker tag reveng/ai-service:${{ github.ref_name }} reveng/ai-service:latest
            docker tag reveng/worker:${{ github.ref_name }} reveng/worker:latest

            docker push reveng/cli:latest
            docker push reveng/web:latest
            docker push reveng/backend:latest
            docker push reveng/ai-service:latest
            docker push reveng/worker:latest
          fi

  build-multi-arch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push multi-arch images
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t reveng/cli:${{ github.ref_name }} \
            -t reveng/cli:latest \
            --push .

          docker buildx build --platform linux/amd64,linux/arm64 \
            -t reveng/web:${{ github.ref_name }} \
            -t reveng/web:latest \
            -f web_interface/Dockerfile.frontend \
            --push ./web_interface

  publish-pypi:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build-python-package]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
