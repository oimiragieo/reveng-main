name: 🧪 Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12']

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 📥 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: 🔍 Check toolchain
      run: |
        python tools/check_toolchain.py --check-only

    - name: 🧪 Run tests
      run: |
        python -m pytest tests/ -v --cov=tools --cov-report=xml --cov-report=html

    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: 📋 Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
        path: |
          coverage.xml
          htmlcov/
          .coverage

  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

    - name: 📥 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: 🎨 Run Black
      run: black --check --diff .

    - name: 📦 Run isort
      run: isort --check-only --diff .

    - name: 🔍 Run Pylint
      run: pylint tools/ reveng_analyzer.py

    - name: 🔒 Run Bandit
      run: bandit -r tools/ reveng_analyzer.py

    - name: 🔗 Check links
      run: |
        pip install linkchecker
        linkchecker --check-extern README.md

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📥 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit

    - name: 🔒 Run Safety check
      run: safety check

    - name: 🔒 Run Bandit security scan
      run: bandit -r tools/ reveng_analyzer.py -f json -o bandit-report.json

    - name: 📋 Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: bandit-report.json

  build:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📥 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: 🏗️ Build package
      run: python -m build

    - name: 🔍 Check package
      run: twine check dist/*

    - name: 📋 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
