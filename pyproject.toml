# REVENG Universal Reverse Engineering Platform - Package Configuration
# ====================================================================

[build-system]
requires = ["setuptools>=65.0", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "reveng-toolkit"
dynamic = ["version"]
description = "Universal reverse engineering platform with AI-powered analysis"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "REVENG Development Team", email = "contact@reveng-project.org"}
]
maintainers = [
    {name = "REVENG Development Team", email = "contact@reveng-project.org"}
]
keywords = [
    "reverse-engineering",
    "binary-analysis",
    "decompiler",
    "disassembler",
    "ai-powered",
    "malware-analysis",
    "vulnerability-detection",
    "binary-reconstruction",
    "ghidra",
    "security"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Topic :: Security",
    "Topic :: Software Development :: Disassemblers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Natural Language :: English",
]

[project.urls]
Homepage = "https://github.com/oimiragieo/reveng-main"
Documentation = "https://docs.reveng-toolkit.org"
Repository = "https://github.com/oimiragieo/reveng-main"
"Bug Tracker" = "https://github.com/oimiragieo/reveng-main/issues"
"Changelog" = "https://github.com/oimiragieo/reveng-main/blob/main/CHANGELOG.md"
"Discussions" = "https://github.com/oimiragieo/reveng-main/discussions"
"Source Code" = "https://github.com/oimiragieo/reveng-main"

[project.scripts]
reveng = "reveng.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "pylint>=3.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    "safety>=2.3.0",
    "bandit>=1.7.0",
]
ai = [
    "anthropic>=0.7.0",
    "openai>=1.3.0",
    "ollama>=0.1.0",
]
web = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "websockets>=12.0",
    "jinja2>=3.1.0",
    "python-multipart>=0.0.6",
]
java = [
    "jython>=2.7.3",
]
all = [
    "reveng-toolkit[ai,web,java]",
]

# Tool Configuration
[tool.black]
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | analysis_.*
  | src_optimal_.*
  | ai_recompiler_.*
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["analysis_*", "src_optimal_*", "ai_recompiler_*"]

[tool.pylint.main]
max-line-length = 100
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "W0703",  # broad-except
]

[tool.pylint.format]
max-module-lines = 2000

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    'analysis_.*',
    'src_optimal_.*',
    'ai_recompiler_.*',
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/analysis_*/*",
    "*/src_optimal_*/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
